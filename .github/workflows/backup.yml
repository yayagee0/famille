name: Monthly Firestore Backup

on:
  schedule:
    # Run on the 1st day of every month at 2 AM UTC
    - cron: '0 2 1 * *'

  # Allow manual triggering for testing
  workflow_dispatch:

jobs:
  backup:
    name: Backup Firestore Data
    runs-on: ubuntu-latest

    permissions:
      contents: write # To create releases with backup files

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install firebase-admin --save-dev

      - name: Create backup directory
        run: mkdir -p backups

      - name: Run Firestore backup
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          VITE_FB_PROJECT_ID: ${{ secrets.VITE_FB_PROJECT_ID }}
        run: |
          npx tsx scripts/firestore-backup.ts

      - name: Get backup filename
        id: backup_info
        run: |
          BACKUP_FILE=$(ls backups/firestore-backup-*.json | head -n1)
          BACKUP_FILENAME=$(basename "$BACKUP_FILE")
          echo "filename=$BACKUP_FILENAME" >> $GITHUB_OUTPUT
          echo "filepath=$BACKUP_FILE" >> $GITHUB_OUTPUT

          # Get file size for release notes
          FILE_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
          echo "filesize=$FILE_SIZE" >> $GITHUB_OUTPUT

          # Count total documents
          TOTAL_DOCS=$(jq '.metadata.totalDocuments' "$BACKUP_FILE")
          echo "totaldocs=$TOTAL_DOCS" >> $GITHUB_OUTPUT

          # Get collections list
          COLLECTIONS=$(jq -r '.metadata.collections | join(", ")' "$BACKUP_FILE")
          echo "collections=$COLLECTIONS" >> $GITHUB_OUTPUT

      - name: Create release with backup
        uses: softprops/action-gh-release@v1
        with:
          tag_name: backup-${{ github.run_number }}-$(date +%Y%m%d)
          name: "Firestore Backup - $(date +'%B %Y')"
          body: |
            ## 📦 Monthly Firestore Backup

            **Backup Date:** $(date +'%B %d, %Y')
            **File Size:** ${{ steps.backup_info.outputs.filesize }}
            **Total Documents:** ${{ steps.backup_info.outputs.totaldocs }}
            **Collections:** ${{ steps.backup_info.outputs.collections }}

            ### 📋 What's Included
            - All family posts (photos, videos, text, polls)
            - User profiles and settings
            - Question bank and user answers
            - Daily mood check-ins

            ### 🔐 Security Note
            This backup contains family data and should be kept secure. 
            Only authorized family members should have access to this backup.

            ### 📥 Usage
            Download the backup file and store it in a secure location.
            The backup is in JSON format and can be restored using Firebase Admin SDK.

            ---
            *This backup was automatically generated by GitHub Actions.*
          files: ${{ steps.backup_info.outputs.filepath }}
          draft: false
          prerelease: false

      - name: Clean up backup files
        run: |
          # Keep backup files for potential debugging, but limit to last 3
          cd backups
          ls -t firestore-backup-*.json | tail -n +4 | xargs -r rm

      - name: Notify on success
        if: success()
        run: |
          echo "✅ Monthly backup completed successfully!"
          echo "📁 Backup file: ${{ steps.backup_info.outputs.filename }}"
          echo "📊 Total documents: ${{ steps.backup_info.outputs.totaldocs }}"

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Monthly backup failed!"
          echo "Please check the workflow logs and fix any issues."
